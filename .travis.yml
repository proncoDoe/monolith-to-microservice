language: node_js
node_js:
  - 12
  
services:
  - docker

env:
  - DOCKER_COMPOSE_VERSION=1.23.2

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

install:
  - docker-compose -f docker-compose-build.yaml build --parallel --no-cache

before_script:
  - echo "no tests"


script:
  - docker --version 

  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker tag udagram-api-feed proncotech/udagram-api-feed:v3

  - docker build -t udagram-api-user ./udagram-api-user
  - docker tag udagram-api-user proncotech/udagram-api-user:v3

  - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend proncotech/udagram-frontend:v3
  
  - docker build -t udagram-reverseproxy ./udagram-reverseproxy
  - docker tag udagram-reverseproxy proncotech/udagram-reverseproxy:v3

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push proncotech/udagram-api-feed:v3
  - docker push proncotech/udagram-api-user:v3
  - docker push proncotech/udagram-frontend:v3
  - docker push proncotech/udagram-reverseproxy:v3
